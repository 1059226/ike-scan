This paper may be freely distributed providing that the contents are not
altered in any way.  The latest version is available at:
http://www.nta-monitor.com/udp-backoff-fingerprinting-paper.txt

ABSTRACT

This paper discusses how to determine which implementation of a UDP service
is being used from the retransmission backoff pattern.  It uses IKE
(Internet Key Exchange) as an example UDP service which can be fingerprinted
in this way, although the technique should be applicable to other UDP
services as well.

The paper also describes an example program called ike-scan which is able
to discover and identify IPsec VPN systems running IKE.  This program is
publicly available under the GNU Public License (GPL).  See
http://www.nta-monitor.com/ike-scan/ for details.

OVERVIEW

Although most services on the Internet use the TCP transport, some use UDP
instead.  Because UDP is not a reliable transport, it is up to the application
to provide the reliability itself if needed.  The main technique used to
ensure reliability is retransmission with backoff which allows the application
to tolerate lost or damaged packets.

Retransmission with backoff involves re-sending a packet if a response is
not received from the peer within a given time, the assumption being that
the original packet must have been lost or damaged in transit.  There are
several variables involved with the retransmission with backoff strategy,
including:

a) How long to wait before re-sending the packet?

b) How should the re-send delay change for subsequent packets, e.g. should
   the delay remain constant, or should it increase with each re-send.
   If the delay is to increase, what algorithm should be used (e.g. linear
   or exponential) and what parameters should be used?

c) How many packets should be sent before giving up?

Often, the exact retransmission and backoff strategy is not specified
by the standard which means that each developer will typically choose
their own scheme.  Because there are a number of variables involved, and there
is no "obviously correct" choice of strategy, this results in most
implementations having distinct backoff patterns or "fingerprints".

For example, the use of retransmission is mandated by RFC 2408 (Section 5.1)
but the exact backoff strategy is not defined.  RFC 2408 suggests basing the
retransmission times on measured round-trip times.  However this is not
practical for the first transmitted packet, which is what ike-scan uses.

The retransmission and backoff strategy for various different IKE
implementations has been studied, and it has been found that:

a) Most, if not all, IPsec VPN vendor implementations have different
   IKE retransmission and backoff strategies; and

b) It is possible to reliably match these patterns to determine which
   IKE implementation a particular host is using.

Sometimes the backoff pattern changes from one version of a product to
another which provides more information and allows different versions of
a particular implementation to be distinguished from each other.

ISSUES

Although just being able to discover an IPsec VPN system running IKE
and determine which IKE implementation it is using is not an vulnerability
in itself, this information can be valuable to a potential attacker.

For example, knowing that there is an XYZ brand of VPN server at a
given address could prompt an attacker to download the appropriate VPN
client and try some username/password guessing.  Alternatively, the
attacker could search for known vulnerabilities on the XYZ VPN server.

Some IKE implementations don't log IKE activity if the handshake does
not complete.  Because it is not necessary to complete the IKE handshake
to discover and fingerprint the system, these systems will not log the
scanning activity and their owners will not be aware that their system has
been scanned.  ike-scan does not complete the IKE handshake and can therefore
be used to check if a given implementation will log this sort of scanning.

This choice not to log if the handshake doesn't complete, and particually
if the initial cookie exchange does not complete, may be based on the
recommendation in RFC 2408 section 1.7.1 that "A 'cookie' ... is aimed at
protecting the computing resources from attack without spending excessive
CPU resources ..." i.e. nothing "expensive" should be done until the cookie
exchange completes.  Although this is normally taken to apply to the
CPU-intensive cryptographic functions, it could also be applied to logging
if log storage were considered expensive.  On the other hand, RFC 2408
section 5.1 says that "If the retry counter reaches zero (0), the event,
RETRY LIMIT REACHED, MAY be logged in the appropriate system audit file".
This would also apply when a system is scanned.  In summary, the RFC seems
to leave the choice to log or not up to the implementation.

In the course of performing many security assessments and penetration
tests for customers, I have found that VPN systems often provide full
access to the internal network which makes them tempting targets to an
attacker.  Also, many people assume that VPN servers are invisible and
impenetrable which is a potentially dangerous assumption given that
ike-scan shows that VPN systems can be discovered and identified, and
some VPN flaws have been discovered recently.

EXAMPLE PROGRAM

The program "ike-scan" demonstrates detection and identification of IPsec
VPN systems.  The backoff patterns are stored in a text file which makes
it easy to add new patterns as they are discovered.

This program is available for free download from:
http://www.nta-monitor.com/ike-scan/

ike-scan sends an initial IKE main-mode packet to each of the specified
hosts and records all the responses returned.  It will display the responses
received which discovers which hosts are running IKE and will return a
response (most IKE implementations will respond in the default configuration,
but not all).  It can also record and display the retransmission backoff
pattern for each responding host and attempt to match this pattern against
a database of known patterns to "fingerprint" the IKE implementation.

The program handles retry and retransmission with backoff to cope with packet
loss.  It also limits the amount of bandwidth used by the outbound IKE packets.

CONTACT ADDRESS

Please send any questions or comments to ike-scan@nta-monitor.com

GLOSSARY OF TERMS

IKE	Internet Key Exchange
IPsec	IP Security
TCP	Transmission Control Protocol
UDP	User Datagram Protocol
VPN	Virtual Private Network
RFC	Request for Comment
Cookie	A unique 64-bit value used to identify IKE peers and prevent some
	Denial of service attacks.
